/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package midisplitter;

import java.awt.Component;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JTextField;

/**
 *
 * @author TÃ¶rcsi
 */
public class ConfigPanel extends javax.swing.JPanel {

    /**
     * Creates new form ConfigPanel
     */
    public ConfigPanel(File f,String out) {
        initComponents();
        file=f;
        initDinamicComponents(out);
    }
    File file;
    ArrayList<JCheckBox> channelArr;
    public String getOutFileName(){
        return outFileNameField.getText();
    }
    public Boolean isGlobal(){
        return globalEnabled.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        globalEnabled = new javax.swing.JCheckBox();
        notGlobalPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        outFileNameField = new javax.swing.JTextField();

        globalEnabled.setSelected(true);
        globalEnabled.setLabel("Use global config");
        globalEnabled.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                globalOrNot(evt);
            }
        });

        notGlobalPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Output:");

        outFileNameField.setText("jTextField1");

        javax.swing.GroupLayout notGlobalPanelLayout = new javax.swing.GroupLayout(notGlobalPanel);
        notGlobalPanel.setLayout(notGlobalPanelLayout);
        notGlobalPanelLayout.setHorizontalGroup(
            notGlobalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notGlobalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(outFileNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );
        notGlobalPanelLayout.setVerticalGroup(
            notGlobalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notGlobalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(notGlobalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(outFileNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(210, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(globalEnabled)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(notGlobalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(globalEnabled)
                .addGap(18, 18, 18)
                .addComponent(notGlobalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        globalEnabled.getAccessibleContext().setAccessibleName("Global config");
    }// </editor-fold>//GEN-END:initComponents

    private void globalOrNot(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_globalOrNot
       for(Component c:notGlobalPanel.getComponents()){
           if(globalEnabled.isSelected()){
               c.setEnabled(false);
           }else{
              c.setEnabled(true); 
           }
       }
    }//GEN-LAST:event_globalOrNot

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox globalEnabled;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel notGlobalPanel;
    private javax.swing.JTextField outFileNameField;
    // End of variables declaration//GEN-END:variables

    private void initDinamicComponents(String outFileName) {
        outFileNameField.setText(outFileName);
        
        globalOrNot(null);
    }
}
